# ShopSerach_v2.0
# Please note: ShopSearch has been completely rewritten!
#
# By HoneyBuzzard & nfell2009
#
# Please note: the converter requires ShopSearch_v1.4 for a full conversion

options:
	P: &8[&aSS&8]&a
	Click-Here: &a&l
	Other-Text: &a
	Custom-Economy: false # Set to true for custom economy. See: http://nfell2009.uk/shopsearch/api?r=ce
	CE-Command-Check: false
	CE-Command-Check2: false
	CE-Command-Add: false
	QuickShop: false

on script load:
	if {ss::setting::converted} is not true:
		message "{@P} ShopSearch_v2.0 is starting conversion from ShopShop_1.X. Please note the converter will convert:" to console
		message "{@P} - Player chests (requires ShopSearch_v1.4 to have been installed)" to console
		message "{@P} - Player data" to console
		message "{@P} - ShopSearch data" to console
		message "{@P} - QuickShop data (requires ShopSearch_v1.4 to have been installed)" to console
		message "{@P} - Stats (requires ShopSearch_v1.4 to have been installed)" to console
		if {ss.playerlist::*} is not empty:
			loop {ss.playerlist::*}:
				loop {ss.%loop-value%.chests::*}:
					add loop-value-2 to {ss::player::%uuid of loop-value%::chests::*}
					set {_c} to {ss.quickshop.%loop-value%}
					set {ss::quickshop::%{_c}%} to loop-value
					set {ss::quickshop::%loop-value%} to {_c}
					set {ss::quickshop::%{_c}%::playerto} to {ss.quickshop.details.%{_c}%::playerto}
					set {ss::quickshop::%{_c}%::amount} to {ss.quickshop.details.%{_c}%::amount}
					set {ss::quickshop::%{_c}%::price} to {ss.quickshop.details.%{_c}%::price}
					set {ss::quickshop::%{_c}%::item} to {ss.quickshop.details.%{_c}%::item}
				delete {ss.%loop-value%.chests::*}
				set {ss::player::%uuid of loop-value%} to loop-value
				set {ss::player::%uuid of loop-value%::exists} to true
				set {ss::player::%uuid of loop-value%::buying} to false
				set {ss::player::%uuid of loop-value%::last-player} to {ss.%uuid of loop-value%.lastplayer}
				add loop-value to {ss::setting::playerlist::*}
		loop {ss.itemlist-itm::*}:
			set {ss::stats::itm::%loop-value%} to loop-value
			set {ss::stats::num::%loop-value%} to {ss.itemlist-num::%loop-value%}
		loop {ss.playersales-p::*}:
			set {ss::stats::playersales::p::%loop-value%} to loop-value
			set {ss::stats::playersales::n::%loop-value%} to {ss.playersales-n::%loop-value%}
	if {ss::settings::cga-key} is not set:
		execute console command "/codegenapi g k shopsearch_v2.0"
		set {ss::settings::cga-key} to {cga.shopsearch_v2.0.code}
				
command /shopsearch [<text>] [<text>] [<text>] [<text>]:
	permission: ss.admin
	trigger:
		if arg 1 is not set:
			message "{@P} Do /ss help - for help"
		else if arg 1 is "add":
			if arg 2 is not set:
				set {ss::player::%uuid of player%::setting::add-num} to 1
			else if arg 2 is "unlimited":
				set {ss::player::%uuid of player%::setting::add-num} to arg 2 parsed as integer
			else:
				set {ss::player::%uuid of player%::setting::add-num} to "unlimited"
			message "{@P} You can now add: %{ss::player::%uuid of player%::setting::add-num}% chests!"
		else if arg 1 is "remove":
			if arg 2 is not set:
				set {ss::player::%uuid of player%::setting::rev-num} to 1
			else if arg 2 is "unlimited":
				set {ss::player::%uuid of player%::setting::rev-num} to arg 2 parsed as integer
			else:
				set {ss::player::%uuid of player%::setting::rev-num} to "unlimited"
			message "{@P} You can now remove: %{ss::player::%uuid of player%::setting::rev-num}% chests!"
		else if arg 1 is "shop":
			if arg 2 is set:
				if arg 3 is set:
					if arg 4 is set:
						set {_p} to arg 2 parsed as player
						set {_i} to arg 3 parsed as item
						set {_a} to arg 4 parsed as number
						set {_u} to uuid of {_p}
						if {_a} contains ".":
							set {_ar::*} to {_a} split at "."
							set {_a} to {_ar::1}
							message "{@P} You can only have an integer for the amount! ShopSearch has converted: %{_ar::2}% to %{_a}%"
						set {_counter} to 0
						loop {ss::player::%{_u}%::chests::*}:
							add 1 to {_counter}
							set {_loc} to loop-value
							set {_bloc} to loop-value
							add 1 to y coord of {_loc}
							if block at {_loc} is sign:
								set {_b} to block at {_loc}
							if line 1 of {_b} is "[Chest Shop]":
								set {_p} to {McCS.Owner.%{_loc}%}
								set {_t} to true
							else if line 1 of {_b} is {_p}:
								set {_t} to true
							if {_t} is true:
								if line 2 of {_b} is {_a}:
									if block at {_bloc} contains {_a} of {_i}:
										if line 4 of {_b} is {_i}:
											set {_l3} to line 3 of {_b}
											set {_arr::*} to {_l3} split at ":"
											set {_l3} to {_arr::1}
											replace all "B" and " " in {_l3} with ""
											set {ss::player::%uuid of player%::transaction::buying} to true
											set {ss::player::%uuid of player%::transaction::sign-loc} to {_loc}
											set set {ss::player::%uuid of player%::transaction::chest-loc} to {_bloc}
											set {ss::player::%uuid of player%::transaction::amount} to {_a}
											set {ss::player::%uuid of player%::transaction::item} to {_i}
											set {ss::player::%uuid of player%::transaction::playerto} to {_p}
											set set {ss::player::%uuid of player%::transaction::price} to {_l3}
											message "{@P} ShopSearch has found a perfect match for you!"
											message "{@P} Item: %{_i}%"
											message "{@P} Amount: %{_a}%"
											message "{@P} Price: %{_l3}%"
											message "{@P} Buying from: %{_p}%"
											send json of "{@P} {@Click-Here}Click Here " tooltip "{@P} To confirm your purchase" run "/ss confirm" then "{@Other-Text}to confirm your purchase"
											exit
						message "{@P} There were: %size of {ss::player::%{_u}%::chests::*}% shops to check. ShopSearch checked %{_counter}%/%size of {ss::player::%{_u}%::chests::*}% before finding the perfect shop"
		else if arg 1 is "confirm":
			if {ss::player::%uuid of player%::transaction::buying} is true:
				set {_a} to {ss::player::%uuid of player%::transaction::amount}
				set {_i} to {ss::player::%uuid of player%::transaction::item}
				set {_p} to {ss::player::%uuid of player%::transaction::playerto}
				set {_u} to uuid of {_p}
				set {_pr} to {ss::player::%uuid of player%::transaction::price}
				set {_sloc} to {ss::player::%uuid of player%::transaction::sign-loc}
				set {_cloc} to {ss::player::%uuid of player%::transaction::chest-loc}
				if {@GiftCard-Payment} is true:
					set {_l} to lore of the player's tool
					set {_ll::*} to {_l} split at ":"
					replace all " " in {_ll::2} with ""
					set {_c} to {_ll::2}
					if {gfc::codes::%{_c}%::redeemed} is false:
						if {gfc::codes::%{_c}%::value} is less than {_pr}:
							subtract {gfc::codes::%{_c}%::value} from {_pr}
							if {@Custom-Economy} is true:
								execute console command "/{@CE-Command-Check2}"
								wait 1 second
								if {ss::temp::%uuid of player%::do-trans} is not set:
									message "{@P} You can't afford to do that right now"
									stop
							else if {myc.enabled} is true:
								if {myc.%player%.money} is less than {_pr}:
									message "{@P} You can't afford to do that right now"
									stop
							else if {pp::setting::running} is true:
								if {pp::player::%uuid of player%::balance} is less than {_pr}:
									message "{@P} You can't afford to do that right now"
									stop
							else if the player's balance is less than {_pr}:
								message "{@P} You can't afford to do that right now"
								stop
							message "{@P} ShopSearch has used your GiftCard valued at: %{gfc::codes::%{_c}%::value}% and will now subtract funds from your bank"
							set the player's tool to air
							set {gfc::codes::%{_c}%::redeemed} to true
						else if {gfc::codes::%{_c}%::value} is equal to {_pr}:
							set the player's tool to air
							set {gfc::codes::%{_c}%::redeemed} to true
							execute console command "/ss-console remove {_i} {_a} _cloc"
							execute console command "/ss-console give {_i} {_a} {_p}"
							if {@Custom-Economy} is true:
								execute console command "/{@CE-Command-Add}"
							else if {myc.enabled} is true:
								add {_pr} to {myc.%{_p}%.money}
							else if {pp::setting::running} is true:
								add {_pr} to {pp::player::%{_u}%::balance}
							else:
								add {_pr} to the balance of {_p}
							message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
							if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
								set {ss::stats::itm::%{_i}%} to {_i}
								set {ss::stats::num::%{_i}%} to 1
							else:
								add 1 to {ss::stats::num::%{_i}%}
							if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
								set {ss::stats::playersales::p::%{_p}%} to {_p}
								set {ss::stats::playersales::n::%{_p}%} to 1
							else:
								add 1 to {ss::stats::playersales::n::%{_p}%}
							add {_pr} to {ss::global::totalmoney}
							delete {ss::player::%uuid of player%::transaction::*}
						else if {gfc::codes::%{_c}%::value} is greater than {_pr}:
							set the player's tool to air
							set {gfc::codes::%{_c}%::redeemed} to true
							execute console command "/ss-console remove {_i} {_a} _cloc"
							execute console command "/ss-console give {_i} {_a} {_p}"
							if {@Custom-Economy} is true:
								execute console command "/{@CE-Command-Add}"
							else if {myc.enabled} is true:
								add {_pr} to {myc.%{_p}%.money}
							else if {pp::setting::running} is true:
								add {_pr} to {pp::player::%{_u}%::balance}
							else:
								add {_pr} to the balance of {_p}
							message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
							if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
								set {ss::stats::itm::%{_i}%} to {_i}
								set {ss::stats::num::%{_i}%} to 1
							else:
								add 1 to {ss::stats::num::%{_i}%}
							if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
								set {ss::stats::playersales::p::%{_p}%} to {_p}
								set {ss::stats::playersales::n::%{_p}%} to 1
							else:
								add 1 to {ss::stats::playersales::n::%{_p}%}
							add {_pr} to {ss::global::totalmoney}
							subtract {_pr} from {gfc::codes::%{_c}%::value}
							give 1 of paper named "%{gfc::setting::prefix}% GiftCard - Value: %{gfc::codes::%{_c}%::value}%" with lore "&aGift Code: %{_c}%" to the player
							delete {ss::player::%uuid of player%::transaction::*}
				if {@Custom-Economy} is true:
					execute console command "/{@CE-Command-Check}"
				else if {myc.enabled} is true:
					execute op command "/myc-transaction normal ShopSearch %player% %{_p}% %{_pr}%"
					if {myc.%player%.tcomplete} is true:
						set {myc.%player%.tcomplete} to false
						execute console command "/ss-console remove {_i} {_a} _cloc"
						execute console command "/ss-console give {_i} {_a} {_p}"
						add {_pr} to {myc.%{_p}%.money}
						message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
						if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
							set {ss::stats::itm::%{_i}%} to {_i}
							set {ss::stats::num::%{_i}%} to 1
						else:
							add 1 to {ss::stats::num::%{_i}%}
						if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
							set {ss::stats::playersales::p::%{_p}%} to {_p}
							set {ss::stats::playersales::n::%{_p}%} to 1
						else:
							add 1 to {ss::stats::playersales::n::%{_p}%}
						add {_pr} to {ss::global::totalmoney}
						delete {ss::player::%uuid of player%::transaction::*}
					else:
						message "{@P} Transaction failed. Please try again."
				else if {pp::setting::running} is true:
					if {pp::player::%uuid of player%::balance} is greater than or equal to {_pr}:
						if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
							set {ss::stats::itm::%{_i}%} to {_i}
							set {ss::stats::num::%{_i}%} to 1
						else:
							add 1 to {ss::stats::num::%{_i}%}
						if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
							set {ss::stats::playersales::p::%{_p}%} to {_p}
							set {ss::stats::playersales::n::%{_p}%} to 1
						else:
							add 1 to {ss::stats::playersales::n::%{_p}%}
						add {_pr} to {ss::global::totalmoney}
						execute console command "/ss-console remove {_i} {_a} _cloc"
						execute console command "/ss-console give {_i} {_a} {_p}"
						subtract {_pr} from {pp::player::%uuid of player%::balance}
						add {_pr} to {ss.%uuid of player%.buying.playerto}'s balance
						message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
						delete {ss::player::%uuid of player%::transaction::*}
					else:
						message "{@P} You can't afford to do that"
				else:
					if player's balance is greater than or equal to {_price}:
						if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
							set {ss::stats::itm::%{_i}%} to {_i}
							set {ss::stats::num::%{_i}%} to 1
						else:
							add 1 to {ss::stats::num::%{_i}%}
						if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
							set {ss::stats::playersales::p::%{_p}%} to {_p}
							set {ss::stats::playersales::n::%{_p}%} to 1
						else:
							add 1 to {ss::stats::playersales::n::%{_p}%}
						add {_pr} to {ss::global::totalmoney}
						execute console command "/ss-console remove {_i} {_a} _cloc"
						execute console command "/ss-console give {_i} {_a} {_p}"
						subtract {_pr} from the player's balance
						add {_pr} to the balance of {_p}
						message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
						delete {ss::player::%uuid of player%::transaction::*}
		else if {ss::api::customcommands::%arg 1%} is set:
			set {_num} to {ss::api::customcommands::%arg 1%::arg-count}
			set {_cmd} to "%{ss::api::customcommands::%arg 1%::command}%"
			if {_num} is not 0:
				loop {_num} times:
					add 1 to {_count}
					set {_cmd} to "%{_cmd}% %arg %{_count}%%
			make player execute command "/%{_cmd}%"
				
command /ss-console [<text>] [<text>] [<text>] [<text>] [<text>]:
	executable by: console
	trigger:
		if arg 1 is "remove":
			set {_i} to arg 1 parsed as item
			set {_a} to arg 2 parsed as integer
			set {_loc} to {%arg 3%}
			remove {_a} of {_i} from block at {_loc}
		else if arg 1 is "give":
			set {_i} to arg 1 parsed as item
			set {_a} to arg 2 parsed as integer
			set {_p} to arg 3 parsed as player
			give {_a} of {_i} to {_p}
				

on rightclick on chest:
	if {ss::player::%uuid of player%::setting::add} is true:
		cancel event
		if {ss::player::%uuid of player%::setting::add-num} is not set:
			if {ss::player::%uuid of player%::chests::%location of block%} is not set:
				set {_b} to block above location of block
				if {_b} is sign:
					if line 1 of {_b} is "%player%" or "[Chest Shop]":
						set {ss::player::%uuid of player%::chests::%location of block%} to location of block
						message "{@P} Added chest! (%location of block%)
						delete {ss::player::%uuid of player%::setting::add-num}
						if {@QuickShop} is true:
							execute console command "/codegenapi g c %{ss.codegenapi.key}% %player% 4"
							set {_c} to {cga.%{ss::settings::cga-key}%.%player%.code}
							set {ss::quickshop::%{_c}%} to location of block
							set {ss::quickshop::%location of block%} to {_c}
							set {ss::quickshop::%{_c}%::playerto} to player
							set {ss::quickshop::%{_c}%::amount} to line 2 of {_b} parsed as number
							set {_price::*} to line 3 of {_b} split at ":"
							replace all "B" and " " in {_price::1} with ""
							set {ss::quickshop::%{_c}%::price} to {_price::1} parsed as number
							set {ss::quickshop::%{_c}%::item} to line 4 of {_b} parsed as item
							message "{@P} Users can do /ss quickshop %{_c}% - to quickly buy from this shop!"
		else:
			if {ss::player::%uuid of player%::chests::%location of block%} is not set:
				set {_b} to block above location of block
				if {_b} is sign:
					if line 1 of {_b} is "%player%" or "[Chest Shop]":
						set {ss::player::%uuid of player%::chests::%location of block%} to location of block
						message "{@P} Added chest! (%location of block%)
						if {ss::player::%uuid of player%::setting::add-num} is 1:
							delete {ss::player::%uuid of player%::setting::add-num}
						else if {ss::player::%uuid of player%::setting::add-num} is not "unlimited":
							subtract 1 from {ss::player::%uuid of player%::setting::add-num}
						if {@QuickShop} is true:
							execute console command "/codegenapi g c %{ss.codegenapi.key}% %player% 4"
							set {_c} to {cga.%{ss::settings::cga-key}%.%player%.code}
							set {ss::quickshop::%{_c}%} to location of block
							set {ss::quickshop::%location of block%} to {_c}
							set {ss::quickshop::%{_c}%::playerto} to player
							set {ss::quickshop::%{_c}%::amount} to line 2 of {_b} parsed as number
							set {_price::*} to line 3 of {_b} split at ":"
							replace all "B" and " " in {_price::1} with ""
							set {ss::quickshop::%{_c}%::price} to {_price::1} parsed as number
							set {ss::quickshop::%{_c}%::item} to line 4 of {_b} parsed as item
							delete {ss::player::%uuid of player%::setting::add-num}
							message "{@P} Users can do /ss quickshop %{_c}% - to quickly buy from this shop!"
								
